name: Build and deploy container

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'LICENSE'
      - 'README.md'

concurrency:
  group: "package"
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch_name: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch_name: arm64
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read

    steps:
      # Free some spaces to avoid "No space left on device" error
      # https://github.com/actions/runner-images/issues/2840
      # https://github.com/easimon/maximize-build-space
      - name: Free some spaces
        run: |
          echo "Available storage:"
          df -h
          echo
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /hostedtoolcache/CodeQL
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          sudo docker image prune --all --force
          echo "Available storage:"
          df -h
          echo

      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Build ${{ matrix.arch_name }}
        uses: docker/bake-action@v6
        with:
          targets: debian
          set: |
            debian.platform=${{ matrix.platform }}
            debian.output=type=oci,dest=/tmp/oci-${{ matrix.arch_name }}

      - name: Compress and split OCI layout cache
        run: |
          tar -czf /tmp/oci-${{ matrix.arch_name }}.tar.gz -C /tmp oci-${{ matrix.arch_name }}
          split -b 2G /tmp/oci-${{ matrix.arch_name }}.tar.gz /tmp/oci-${{ matrix.arch_name }}.tar.gz.part.
          ls -la /tmp/oci-${{ matrix.arch_name }}.tar.gz.part.*

      - name: Upload ${{ matrix.arch_name }} OCI layout
        uses: actions/upload-artifact@v4
        with:
          name: oci-layout-${{ matrix.arch_name }}
          path: /tmp/oci-${{ matrix.arch_name }}.tar.gz.part.*

  create-manifest:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Free some spaces
        run: |
          echo "Available storage:"
          df -h
          echo
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /hostedtoolcache/CodeQL
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          sudo docker image prune --all --force
          echo "Available storage:"
          df -h
          echo

      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:qemu-v9.2.2
      - uses: docker/setup-buildx-action@v3

      - name: Download and extract AMD64 OCI layout cache
        uses: actions/download-artifact@v4
        with:
          name: oci-layout-amd64
          path: /tmp/amd64-artifacts/
          
      - name: Reassemble and extract AMD64 OCI layout
        run: |
          cd /tmp/amd64-artifacts
          cat oci-amd64.tar.gz.part.* > /tmp/oci-amd64.tar.gz
          cd /tmp
          rm -rf /tmp/amd64-artifacts
          tar -xzf oci-amd64.tar.gz
          rm -f /tmp/oci-amd64.tar.gz

      - name: Download and extract ARM64 OCI layout
        uses: actions/download-artifact@v4
        with:
          name: oci-layout-arm64
          path: /tmp/arm64-artifacts/
          
      - name: Reassemble and extract ARM64 OCI layout
        run: |
          cd /tmp/arm64-artifacts
          cat oci-arm64.tar.gz.part.* > /tmp/oci-arm64.tar.gz
          cd /tmp
          rm -rf /tmp/arm64-artifacts
          tar -xzf oci-arm64.tar.gz
          rm -f /tmp/oci-arm64.tar.gz

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push multi-arch manifest using OCI cache
        uses: docker/bake-action@v6
        with:
          push: true
          set: |
            *.cache-from=type=oci,src=/tmp/oci-amd64
            *.cache-from=type=oci,src=/tmp/oci-arm64
